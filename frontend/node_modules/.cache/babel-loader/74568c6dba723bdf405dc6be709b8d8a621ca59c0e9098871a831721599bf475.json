{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/blog/client/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport { Link, Navigate } from 'react-router-dom';\nimport style from '../css/RegisterPage.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message1, setMessage1] = useState('');\n  const [message2, setMessage2] = useState('');\n  const [redirext, setRedirext] = useState(false); //true 일때만 Navigate 실행되도록\n\n  const login = async e => {\n    e.preventDefault();\n    console.log(username, password);\n    if (!/^[a-zA-Z][a-zA-Z0-9]{3,}$/.test(username)) {\n      setMessage1('아이디는 4자 이상이어야 하며 영어로 시작해야 합니다.');\n      return;\n    } else {\n      setMessage1('');\n    }\n    if (password.length < 4) {\n      setMessage2('4자 이상이어야 합니다.');\n      return;\n    } else {\n      setMessage2('');\n    }\n\n    //백엔드로 POST 요청 및 응답\n    const response = await fetch('http://localhost:8000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log('data출력---', data);\n    if (data.message === 'ok') {\n      setRedirext(true);\n      console.log('로그인성공');\n      /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this);\n      window.location.href = '/';\n    }\n    if (data.message === 'nouser') {\n      setMessage1('사용자가 없습니다');\n    }\n    if (data.message === 'failed') {\n      setMessage2('비밀번호가 맞지 않습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: `mw ${style.register}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0AC\\uC6A9\\uC790\\uC774\\uB984\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uB098\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"d51nFvh/w11/UIC93UXbPPKJwo4=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Link","Navigate","style","useState","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","message1","setMessage1","message2","setMessage2","redirext","setRedirext","login","e","preventDefault","console","log","test","length","response","fetch","method","body","JSON","stringify","headers","data","json","message","to","fileName","_jsxFileName","lineNumber","columnNumber","window","location","href","className","register","children","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/blog/client/src/pages/LoginPage.jsx"],"sourcesContent":["import { Link, Navigate } from 'react-router-dom';\r\nimport style from '../css/RegisterPage.module.css';\r\nimport { useState } from 'react';\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message1, setMessage1] = useState('');\r\n  const [message2, setMessage2] = useState('');\r\n  const [redirext, setRedirext] = useState(false); //true 일때만 Navigate 실행되도록\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n    console.log(username, password);\r\n\r\n    if (!/^[a-zA-Z][a-zA-Z0-9]{3,}$/.test(username)) {\r\n      setMessage1('아이디는 4자 이상이어야 하며 영어로 시작해야 합니다.');\r\n      return;\r\n    } else {\r\n      setMessage1('');\r\n    }\r\n    if (password.length < 4) {\r\n      setMessage2('4자 이상이어야 합니다.');\r\n      return;\r\n    } else {\r\n      setMessage2('');\r\n    }\r\n\r\n    //백엔드로 POST 요청 및 응답\r\n    const response = await fetch('http://localhost:8000/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ username, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log('data출력---', data);\r\n\r\n    if (data.message === 'ok') {\r\n      setRedirext(true)\r\n      console.log('로그인성공');\r\n      <Navigate to=\"/\" />;\r\n      window.location.href = '/';\r\n    }\r\n    if (data.message === 'nouser') {\r\n      setMessage1('사용자가 없습니다');\r\n    }\r\n    if (data.message === 'failed') {\r\n      setMessage2('비밀번호가 맞지 않습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={`mw ${style.register}`}>\r\n      <h2>로그인</h2>\r\n      <form onSubmit={login}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"사용자이름\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <span>{message1}</span>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"패스워드\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <span>{message2}</span>\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n      <p>\r\n        계정이 없나요? <Link to=\"/register\">회원가입</Link>\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,gCAAgC;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMe,KAAK,GAAG,MAAOC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACd,QAAQ,EAAEE,QAAQ,CAAC;IAE/B,IAAI,CAAC,2BAA2B,CAACa,IAAI,CAACf,QAAQ,CAAC,EAAE;MAC/CK,WAAW,CAAC,gCAAgC,CAAC;MAC7C;IACF,CAAC,MAAM;MACLA,WAAW,CAAC,EAAE,CAAC;IACjB;IACA,IAAIH,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAE;MACvBT,WAAW,CAAC,eAAe,CAAC;MAC5B;IACF,CAAC,MAAM;MACLA,WAAW,CAAC,EAAE,CAAC;IACjB;;IAEA;IACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEtB,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5CqB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCZ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEU,IAAI,CAAC;IAE9B,IAAIA,IAAI,CAACE,OAAO,KAAK,IAAI,EAAE;MACzBjB,WAAW,CAAC,IAAI,CAAC;MACjBI,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,aAAAjB,OAAA,CAACJ,QAAQ;QAACkC,EAAE,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACnBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC5B;IACA,IAAIV,IAAI,CAACE,OAAO,KAAK,QAAQ,EAAE;MAC7BrB,WAAW,CAAC,WAAW,CAAC;IAC1B;IACA,IAAImB,IAAI,CAACE,OAAO,KAAK,QAAQ,EAAE;MAC7BnB,WAAW,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEV,OAAA;IAAMsC,SAAS,EAAG,MAAKzC,KAAK,CAAC0C,QAAS,EAAE;IAAAC,QAAA,gBACtCxC,OAAA;MAAAwC,QAAA,EAAI;IAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZlC,OAAA;MAAMyC,QAAQ,EAAE5B,KAAM;MAAA2B,QAAA,gBACpBxC,OAAA;QACE0C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gCAAO;QACnBC,KAAK,EAAEzC,QAAS;QAChB0C,QAAQ,EAAG/B,CAAC,IAAK;UACfV,WAAW,CAACU,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAC;QAC7B;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFlC,OAAA;QAAAwC,QAAA,EAAOjC;MAAQ;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlC,OAAA;QACE0C,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,0BAAM;QAClBC,KAAK,EAAEvC,QAAS;QAChBwC,QAAQ,EAAG/B,CAAC,IAAK;UACfR,WAAW,CAACQ,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAC;QAC7B;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFlC,OAAA;QAAAwC,QAAA,EAAO/B;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlC,OAAA;QAAQ0C,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACPlC,OAAA;MAAAwC,QAAA,GAAG,yCACQ,eAAAxC,OAAA,CAACL,IAAI;QAACmC,EAAE,EAAC,WAAW;QAAAU,QAAA,EAAC;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEX,CAAC;AAAChC,EAAA,CA7EID,SAAS;AAAA8C,EAAA,GAAT9C,SAAS;AA+Ef,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}