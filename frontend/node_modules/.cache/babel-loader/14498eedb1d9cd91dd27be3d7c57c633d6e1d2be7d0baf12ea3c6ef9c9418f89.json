{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/blog/client/src/components/CommentsLi.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport style from '../css/CommentsLi.module.css';\nimport user from '../store/userStore';\n\n// 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클럭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username -cookie 정보로 활용 즉, 백엔드에서 처리)\n\n// 2-1 댓글 수정하기 버튼을 클릭하면 수정 input 란이 등장\n// 2-2 기존 ui 안보이게\n// 2-3 input 영역에 기존 댓글 입력된 상태\n\n// 3-1 수정작성완료 버튼을 클릭하면 put 요청됨, api 백엔드 개발 \n// 3-2 취소 버튼을 클릭하면 이전 상태로 돌감. (기존 리스트 보여짐 state로 변경)\n// 3-3 다른 취소 버튼을 클릭하면 모든 editCon는 이전 상태로 돌아감 ( state로 변경)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentsLi = ({\n  comment,\n  userName\n}) => {\n  _s();\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const day = new Date(comment.updatedAt);\n  const date = day.toLocaleDateString();\n  const editComment = e => {\n    //수정버튼 클릭 시 수정 폼이 보여지는 함수\n    // 수정버튼을 클릭한 댓글의 ID 값을 state 정보로 활용\n    console.log('클릭 대상의 li-dataset : ', e.target.parentNode.parentNode.dataset.id);\n    setEditingCommentId(e.target.parentNode.parentNode.dataset.id);\n  };\n  const deleteComment = () => {};\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-id\": comment._id,\n    children: [editingCommentId === comment._id, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.list,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.content,\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.author,\n        children: comment.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.date,\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), userName === comment.author ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: editComment,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteComment,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.editCon,\n      style: {\n        display: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC218\\uC815\\uC791\\uC131\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsLi, \"4j40ABrA2qOE7j+3ud/7/eNfa9A=\");\n_c = CommentsLi;\nexport default CommentsLi;\nvar _c;\n$RefreshReg$(_c, \"CommentsLi\");","map":{"version":3,"names":["useState","style","user","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentsLi","comment","userName","_s","editingCommentId","setEditingCommentId","day","Date","updatedAt","date","toLocaleDateString","editComment","e","console","log","target","parentNode","dataset","id","deleteComment","_id","children","className","list","content","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","disabled","editCon","display","name","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/blog/client/src/components/CommentsLi.jsx"],"sourcesContent":["import { useState } from 'react';\nimport style from '../css/CommentsLi.module.css';\nimport user from '../store/userStore';\n\n// 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클럭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username -cookie 정보로 활용 즉, 백엔드에서 처리)\n\n// 2-1 댓글 수정하기 버튼을 클릭하면 수정 input 란이 등장\n// 2-2 기존 ui 안보이게\n// 2-3 input 영역에 기존 댓글 입력된 상태\n\n// 3-1 수정작성완료 버튼을 클릭하면 put 요청됨, api 백엔드 개발 \n// 3-2 취소 버튼을 클릭하면 이전 상태로 돌감. (기존 리스트 보여짐 state로 변경)\n// 3-3 다른 취소 버튼을 클릭하면 모든 editCon는 이전 상태로 돌아감 ( state로 변경)\n\nconst CommentsLi = ({ comment, userName }) => {\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const day = new Date(comment.updatedAt);\n  const date = day.toLocaleDateString();\n\n  const editComment = (e) => {\n    //수정버튼 클릭 시 수정 폼이 보여지는 함수\n    // 수정버튼을 클릭한 댓글의 ID 값을 state 정보로 활용\n    console.log('클릭 대상의 li-dataset : ', e.target.parentNode.parentNode.dataset.id);\n    setEditingCommentId(e.target.parentNode.parentNode.dataset.id);\n  };\n  const deleteComment = () => {};\n\n  return (\n    <li data-id={comment._id}>\n      {editingCommentId === comment._id}\n      <div className={style.list}>\n        <p className={style.content}>{comment.content}</p>\n        <p className={style.author}>{comment.author}</p>\n        <p className={style.date}>{date}</p>\n\n        {userName === comment.author ? (\n          <>\n            <button onClick={editComment}>수정</button>\n            <button onClick={deleteComment}>삭제</button>\n          </>\n        ) : (\n          <>\n            <button disabled>수정</button>\n            <button disabled>삭제</button>\n          </>\n        )}\n      </div>\n      <div className={style.editCon} style={{ display: 'none' }}>\n        <textarea name=\"\" id=\"\"></textarea>\n        <button>수정작성완료</button>\n        <button>취소</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CommentsLi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}