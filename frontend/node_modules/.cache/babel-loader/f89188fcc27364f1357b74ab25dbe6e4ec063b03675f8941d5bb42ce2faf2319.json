{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/blog/client/src/components/CommentsLi.jsx\";\nimport style from '../css/CommentsLi.module.css';\nimport user from '../store/userStore';\n\n// 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클럭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username -cookie 정보로 활용 즉, 백엔드에서 처리)\n\n// 2-1 댓글 수정하기 버튼을 클릭하면 수정 input 란이 등장\n// 2-2 기존 ui 안보이게\n// 2-3 input 영역에 기존 댓글 입력된 상태\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentsLi = ({\n  comment,\n  username\n}) => {\n  const day = new Date(comment.aup);\n  const editComment = () => {};\n  const deleteComment = () => {};\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.list,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.content,\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.author,\n        children: comment.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.date,\n        children: comment.updateAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), username === comment.author ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: editComment,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteComment,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.editCon,\n      style: {\n        display: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC218\\uC815\\uC791\\uC131\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = CommentsLi;\nexport default CommentsLi;\nvar _c;\n$RefreshReg$(_c, \"CommentsLi\");","map":{"version":3,"names":["style","user","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentsLi","comment","username","day","Date","aup","editComment","deleteComment","children","className","list","content","fileName","_jsxFileName","lineNumber","columnNumber","author","date","updateAt","onClick","disabled","editCon","display","name","id","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/blog/client/src/components/CommentsLi.jsx"],"sourcesContent":["import style from '../css/CommentsLi.module.css';\nimport user from '../store/userStore';\n\n// 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클럭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username -cookie 정보로 활용 즉, 백엔드에서 처리)\n\n// 2-1 댓글 수정하기 버튼을 클릭하면 수정 input 란이 등장\n// 2-2 기존 ui 안보이게\n// 2-3 input 영역에 기존 댓글 입력된 상태\n\nconst CommentsLi = ({ comment, username }) => {\n\n  const day = new Date(comment.aup)\n  const editComment = () => {};\n  const deleteComment = () => {};\n\n  return (\n    <li>\n      <div className={style.list}>\n        <p className={style.content}>{comment.content}</p>\n        <p className={style.author}>{comment.author}</p>\n        <p className={style.date}>{comment.updateAt}</p>\n\n        {username === comment.author ? (\n          <>\n            <button onClick={editComment}>수정</button>\n            <button onClick={deleteComment}>삭제</button>\n          </>\n        ) : (\n          <>\n            <button disabled>수정</button>\n            <button disabled>삭제</button>\n          </>\n        )}\n      </div>\n      <div className={style.editCon} style={{ display: 'none' }}>\n        <textarea name=\"\" id=\"\"></textarea>\n        <button>수정작성완료</button>\n        <button>취소</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CommentsLi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}