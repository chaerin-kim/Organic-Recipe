{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/blog/client/src/components/KakaoLogin.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\n\n// 카카오 로그인\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client_id = 'f65dbab13ce0e288353d738bac59809b'; //appKey\nconst redirect_uri = 'http://localhost:3000';\nconst response_type = 'code';\nconst KakaoLogin = () => {\n  _s();\n  //백엔드가 있는 경우 : 백엔드에서 카카오 호출 하는 api \n\n  //카카오로부터 값을 받으면 /code=어쩌고~ 형태로옴\n  // => 카카오로부터 인가 코드 받은 것으로 판단\n  useEffect(() => {\n    const search = new URLSearchParams(window.location.search);\n    const code = search.get('code'); //lfRu-6jn4UjVibTFlVK8YR6yrOQ0Z9C5ghEpvKmL5U0HNcot-aEr5gAAAAQKPXObAAABkONxDcHNsk3jZ7dWzg\n    // 카카오로부터 리다이렉트 당한 경우 code 가 있겠지\n    if (code) {\n      //POST를 /oauth/token을 날린다 (참고: 이거 원래 서버에서 하는거임)\n      handleGetToken();\n    }\n  }, []);\n  const handleGetToken = async = {};\n  const authParam = new URLSearchParams({\n    client_id,\n    redirect_uri,\n    response_type\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      type: \"button\",\n      href: `https://kauth.kakao.com/oauth/authorize?${authParam.toString()}`,\n      children: \"\\uCE74\\uCE74\\uC624\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(KakaoLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoLogin;\nexport default KakaoLogin;\nvar _c;\n$RefreshReg$(_c, \"KakaoLogin\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","client_id","redirect_uri","response_type","KakaoLogin","_s","search","URLSearchParams","window","location","code","get","handleGetToken","async","authParam","children","type","href","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/blog/client/src/components/KakaoLogin.jsx"],"sourcesContent":["import { useEffect } from \"react\";\n\n// 카카오 로그인\nconst client_id = 'f65dbab13ce0e288353d738bac59809b'; //appKey\nconst redirect_uri = 'http://localhost:3000';\nconst response_type = 'code';\n\nconst KakaoLogin = () => {\n  //백엔드가 있는 경우 : 백엔드에서 카카오 호출 하는 api \n  \n  //카카오로부터 값을 받으면 /code=어쩌고~ 형태로옴\n  // => 카카오로부터 인가 코드 받은 것으로 판단\n  useEffect(()=>{\n    const search = new URLSearchParams(window.location.search);\n    const code = search.get('code'); //lfRu-6jn4UjVibTFlVK8YR6yrOQ0Z9C5ghEpvKmL5U0HNcot-aEr5gAAAAQKPXObAAABkONxDcHNsk3jZ7dWzg\n    // 카카오로부터 리다이렉트 당한 경우 code 가 있겠지\n    if(code){\n      //POST를 /oauth/token을 날린다 (참고: 이거 원래 서버에서 하는거임)\n      handleGetToken()\n    }\n  },[])\n\n  const handleGetToken = async ={\n\n  }\n\n  const authParam = new URLSearchParams({\n    client_id,\n    redirect_uri,\n    response_type,\n  });\n  return (\n    <div>\n      <a type=\"button\" href={`https://kauth.kakao.com/oauth/authorize?${authParam.toString()}`}>\n        카카오\n      </a>\n    </div>\n  );\n};\n\nexport default KakaoLogin;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,kCAAkC,CAAC,CAAC;AACtD,MAAMC,YAAY,GAAG,uBAAuB;AAC5C,MAAMC,aAAa,GAAG,MAAM;AAE5B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;;EAEA;EACA;EACAP,SAAS,CAAC,MAAI;IACZ,MAAMQ,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACH,MAAM,CAAC;IAC1D,MAAMI,IAAI,GAAGJ,MAAM,CAACK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IACjC;IACA,IAAGD,IAAI,EAAC;MACN;MACAE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,cAAc,GAAGC,KAAK,GAAE,CAE9B,CAAC;EAED,MAAMC,SAAS,GAAG,IAAIP,eAAe,CAAC;IACpCN,SAAS;IACTC,YAAY;IACZC;EACF,CAAC,CAAC;EACF,oBACEH,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAGgB,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAG,2CAA0CH,SAAS,CAACI,QAAQ,CAAC,CAAE,EAAE;MAAAH,QAAA,EAAC;IAE1F;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/BID,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}