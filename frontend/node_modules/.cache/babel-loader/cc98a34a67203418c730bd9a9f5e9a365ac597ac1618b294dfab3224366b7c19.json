{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/blog/client/src/components/CommentsArea.jsx\",\n  _s = $RefreshSig$();\nimport style from '../css/CommentsArea.module.css';\nimport CommentsLi from './CommentsLi';\nimport { url } from '../store/ref';\nimport { useCallback, useEffect, useState } from 'react';\n\n// V 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// V 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클릭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username- cookie 정보로 활용 즉, 백엔드에서 처리\n// 1-5 댓글리스트 불러옴. api get\n// 1-6  <CommentsLi /> 바인딩 처리\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsArea = ({\n  userName,\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState();\n  console.log('comments---', comments);\n  const fetchComments = useCallback(() => {\n    fetch(`${url}/commetList/${postId}`) //\n    .then(res => res.json()) //\n    .then(data => console.log(data)); //\n  }, [postId]);\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n\n  //댓글 등록\n  const commentAdd = async () => {\n    const content = document.getElementById('content').value;\n    const data = new FormData();\n    data.set('postId', postId);\n    data.set('content', content);\n    console.log(data);\n    const response = await fetch(`${url}/commentAdd`, {\n      method: 'POST',\n      body: data,\n      credentials: 'include' //쿠키 활용할때\n    });\n    console.log(response);\n    if (response.ok) {\n      console.log('댓글 입력 완료!');\n    }\n\n    // fetch(`${url}/commentAdd`, {\n    //   method: 'POST',\n    //   headers: { ContentType: 'application/json' },\n    //   body: JSON.stringify({\n    //     postId,\n    //     content,\n    //   }),\n    // }).then();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.commentsArea,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uB313\\uAE00\\uC601\\uC5ED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), userName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        id: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: commentAdd,\n        children: \"\\uB313\\uAE00\\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uBA74 \\uB313\\uAE00\\uC744 \\uB4F1\\uB85D\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [comments.map, /*#__PURE__*/_jsxDEV(CommentsLi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentsLi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentsLi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentsLi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentsLi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsArea, \"UVcEHGJNDyGr93KApuQX/BBvlXA=\");\n_c = CommentsArea;\nexport default CommentsArea;\nvar _c;\n$RefreshReg$(_c, \"CommentsArea\");","map":{"version":3,"names":["style","CommentsLi","url","useCallback","useEffect","useState","jsxDEV","_jsxDEV","CommentsArea","userName","postId","_s","comments","setComments","console","log","fetchComments","fetch","then","res","json","data","commentAdd","content","document","getElementById","value","FormData","set","response","method","body","credentials","ok","className","commentsArea","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onClick","map","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/blog/client/src/components/CommentsArea.jsx"],"sourcesContent":["import style from '../css/CommentsArea.module.css';\nimport CommentsLi from './CommentsLi';\nimport { url } from '../store/ref';\nimport { useCallback, useEffect, useState } from 'react';\n\n// V 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// V 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클릭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username- cookie 정보로 활용 즉, 백엔드에서 처리\n// 1-5 댓글리스트 불러옴. api get\n// 1-6  <CommentsLi /> 바인딩 처리\n\nconst CommentsArea = ({ userName, postId }) => {\n  const [comments, setComments] = useState();\n  console.log('comments---', comments);\n\n  const fetchComments = useCallback(() => {\n    fetch(`${url}/commetList/${postId}`) //\n      .then((res) => res.json()) //\n      .then((data) => console.log(data)); //\n  }, [postId]);\n\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n\n  //댓글 등록\n  const commentAdd = async () => {\n    const content = document.getElementById('content').value;\n\n    const data = new FormData();\n    data.set('postId', postId);\n    data.set('content', content);\n\n    console.log(data);\n\n    const response = await fetch(`${url}/commentAdd`, {\n      method: 'POST',\n      body: data,\n      credentials: 'include', //쿠키 활용할때\n    });\n    console.log(response);\n    if (response.ok) {\n      console.log('댓글 입력 완료!');\n    }\n\n    // fetch(`${url}/commentAdd`, {\n    //   method: 'POST',\n    //   headers: { ContentType: 'application/json' },\n    //   body: JSON.stringify({\n    //     postId,\n    //     content,\n    //   }),\n    // }).then();\n  };\n\n  return (\n    <section className={style.commentsArea}>\n      <h3>댓글영역</h3>\n      {userName ? (\n        <div>\n          <textarea name=\"content\" id=\"content\"></textarea>\n          <button onClick={commentAdd}>댓글입력</button>\n        </div>\n      ) : (\n        <p>로그인 하면 댓글을 등록할 수 있습니다.</p>\n      )}\n\n      <hr />\n      <ul>\n        {comments.map}\n        <CommentsLi />\n        <CommentsLi />\n        <CommentsLi />\n        <CommentsLi />\n        <CommentsLi />\n      </ul>\n    </section>\n  );\n};\n\nexport default CommentsArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}