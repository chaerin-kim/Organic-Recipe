{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/renewBlog2/recode/client/src/components/CommentsArea.jsx\",\n  _s = $RefreshSig$();\nimport style from '../css/CommentsArea.module.css';\nimport CommentsLi from './CommentsLi';\nimport { url } from '../store/ref';\nimport { useCallback, useEffect, useState } from 'react';\n\n// 1-5 댓글 리스트를 불러옴 api get\n// 1-6 댓글 input 영역 초기화\n// 1-7 <CommentsLi /> 바인딩 처리\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsArea = ({\n  userName,\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState();\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const fetchComments = useCallback(async () => {\n    fetch(`${url}/commentList/${postId}`) //\n    .then(res => res.json()) //\n    .then(data => setComments(data));\n  }, [postId]);\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n\n  // 댓글 등록\n  const commentAdd = async () => {\n    const content = document.getElementById('content').value;\n    const data = new FormData();\n    data.set('postId', postId);\n    data.set('content', content);\n    console.log(data);\n    const response = await fetch(`${url}/commentAdd`, {\n      method: 'POST',\n      body: data,\n      credentials: 'include' // 쿠키 활용할 때\n    });\n    console.log(response);\n    if (response.ok) {\n      console.log('댓글입력완료가 되면 db 호출함수 재실행');\n      await fetchComments();\n      document.getElementById('content').value = '';\n      document.getElementById('content').focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.commentsArea,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subTitle\",\n      children: \"COMMENTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), userName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        id: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: commentAdd,\n        children: \"\\uB313\\uAE00\\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.commentInfo,\n      children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uBA74 \\uB313\\uAE00\\uC744 \\uB4F1\\uB85D\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments === null || comments === void 0 ? void 0 : comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(CommentsLi, {\n          comment: comment,\n          userName: userName,\n          editingCommentId: editingCommentId,\n          setEditingCommentId: setEditingCommentId,\n          fetchComments: fetchComments\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsArea, \"uDq2CYxawzfjLAhGuYzYQ/EHILE=\");\n_c = CommentsArea;\nexport default CommentsArea;\nvar _c;\n$RefreshReg$(_c, \"CommentsArea\");","map":{"version":3,"names":["style","CommentsLi","url","useCallback","useEffect","useState","jsxDEV","_jsxDEV","CommentsArea","userName","postId","_s","comments","setComments","editingCommentId","setEditingCommentId","fetchComments","fetch","then","res","json","data","commentAdd","content","document","getElementById","value","FormData","set","console","log","response","method","body","credentials","ok","focus","className","commentsArea","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onClick","commentInfo","map","comment","_id","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/renewBlog2/recode/client/src/components/CommentsArea.jsx"],"sourcesContent":["import style from '../css/CommentsArea.module.css';\nimport CommentsLi from './CommentsLi';\nimport { url } from '../store/ref';\nimport { useCallback, useEffect, useState } from 'react';\n\n// 1-5 댓글 리스트를 불러옴 api get\n// 1-6 댓글 input 영역 초기화\n// 1-7 <CommentsLi /> 바인딩 처리\n\nconst CommentsArea = ({ userName, postId }) => {\n  const [comments, setComments] = useState();\n  const [editingCommentId, setEditingCommentId] = useState(null);\n\n  const fetchComments = useCallback(async () => {\n    fetch(`${url}/commentList/${postId}`) //\n      .then((res) => res.json()) //\n      .then((data) => setComments(data));\n  }, [postId]);\n\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n\n  // 댓글 등록\n  const commentAdd = async () => {\n    const content = document.getElementById('content').value;\n\n    const data = new FormData();\n    data.set('postId', postId);\n    data.set('content', content);\n\n    console.log(data);\n\n    const response = await fetch(`${url}/commentAdd`, {\n      method: 'POST',\n      body: data,\n      credentials: 'include', // 쿠키 활용할 때\n    });\n    console.log(response);\n    if (response.ok) {\n      console.log('댓글입력완료가 되면 db 호출함수 재실행');\n      await fetchComments();\n      document.getElementById('content').value = '';\n      document.getElementById('content').focus();\n    }\n  };\n\n  return (\n    <section className={style.commentsArea}>\n      <p className=\"subTitle\">COMMENTS</p>\n      {userName ? (\n        <div>\n          <textarea name=\"content\" id=\"content\"></textarea>\n          <button onClick={commentAdd}>댓글입력</button>\n        </div>\n      ) : (\n        <span className={style.commentInfo}>\n          로그인 하면 댓글을 등록할 수 있습니다.\n        </span>\n      )}\n\n      <hr />\n      <ul>\n        {comments?.map((comment) => {\n          return (\n            <CommentsLi\n              key={comment._id}\n              comment={comment}\n              userName={userName}\n              editingCommentId={editingCommentId}\n              setEditingCommentId={setEditingCommentId}\n              fetchComments={fetchComments}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default CommentsArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}