{"ast":null,"code":"var _jsxFileName = \"/Users/chaerinkim/Desktop/HPE/react_study/Blog \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175 2/blog/client/src/components/CommentsLi.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport style from '../css/CommentsLi.module.css';\nimport user from '../store/userStore';\nimport { url } from '../store/ref';\n\n// 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클럭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username -cookie 정보로 활용 즉, 백엔드에서 처리)\n\n// 2-1 댓글 수정하기 버튼을 클릭하면 수정 input 란이 등장\n// 2-1 -1 input 영역에\n// 2-2 기존 ui 안보이게\n// 2-3 input 영역에 기존 댓글 입력된 상태\n\n// 3-1 수정작성완료 버튼을 클릭하면 put 요청됨, api 백엔드 개발\n// 3-2 취소 버튼을 클릭하면 이전 상태로 돌감. (기존 리스트 보여짐 state로 변경)\n// 3-3 다른 취소 버튼을 클릭하면 모든 editCon는 이전 상태로 돌아감 ( state로 변경)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentsLi = ({\n  comment,\n  userName,\n  editingCommentId,\n  setEditingCommentId\n}) => {\n  _s();\n  //const [editingCommentId, setEditingCommentId] = useState(null); //상위 컴포넌트로 이동\n  const [updateComment, setUpdateComment] = useState('');\n  const day = new Date(comment.updatedAt);\n  const date = day.toLocaleDateString();\n  const editComment = e => {\n    //수정버튼 클릭 시 수정 폼이 보여지는 함수\n    // 수정버튼을 클릭한 댓글의 ID 값을 state 정보로 활용\n\n    setEditingCommentId(e.target.parentNode.parentNode.dataset.id);\n    setUpdateComment(e.target.parentNode.querySelector('p').textContent); //기존 작성 댓글 나타나도록\n  };\n  const deleteComment = () => {\n    const response = fetch(`${url}/deleteComment/${comment._id}`, {});\n  };\n  const editCommentUpdate = () => {};\n  const cancelCommentUpdate = () => {\n    setEditingCommentId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-id\": comment._id,\n    children: editingCommentId === comment._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.editCon,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        id: comment._id,\n        value: updateComment,\n        onChange: e => {\n          setUpdateComment(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editCommentUpdate,\n        children: \"\\uC218\\uC815\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelCommentUpdate,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.list,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.content,\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.author,\n        children: comment.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.date,\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), userName === comment.author ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: editComment,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteComment,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsLi, \"gjeUF9KBfs2xCIiOvKsmsbi4xMU=\");\n_c = CommentsLi;\nexport default CommentsLi;\nvar _c;\n$RefreshReg$(_c, \"CommentsLi\");","map":{"version":3,"names":["useState","style","user","url","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentsLi","comment","userName","editingCommentId","setEditingCommentId","_s","updateComment","setUpdateComment","day","Date","updatedAt","date","toLocaleDateString","editComment","e","target","parentNode","dataset","id","querySelector","textContent","deleteComment","response","fetch","_id","editCommentUpdate","cancelCommentUpdate","children","className","editCon","name","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","list","content","author","disabled","_c","$RefreshReg$"],"sources":["/Users/chaerinkim/Desktop/HPE/react_study/Blog 만들기 2/blog/client/src/components/CommentsLi.jsx"],"sourcesContent":["import { useState } from 'react';\nimport style from '../css/CommentsLi.module.css';\nimport user from '../store/userStore';\nimport { url } from '../store/ref';\n\n\n// 1. 로그인 된 유저만 댓글 입력란을 볼 수 있다.\n// 1-2 로그인이 안된 상태라면 로그인하세요라는 메시지를 보여준다.\n// 1-3 댓글 입력 후 버튼 클럭하면 api 백엔드 개발\n// 1-4 전송되는 정보 content postid (username -cookie 정보로 활용 즉, 백엔드에서 처리)\n\n// 2-1 댓글 수정하기 버튼을 클릭하면 수정 input 란이 등장\n// 2-1 -1 input 영역에\n// 2-2 기존 ui 안보이게\n// 2-3 input 영역에 기존 댓글 입력된 상태\n\n// 3-1 수정작성완료 버튼을 클릭하면 put 요청됨, api 백엔드 개발\n// 3-2 취소 버튼을 클릭하면 이전 상태로 돌감. (기존 리스트 보여짐 state로 변경)\n// 3-3 다른 취소 버튼을 클릭하면 모든 editCon는 이전 상태로 돌아감 ( state로 변경)\n\nconst CommentsLi = ({\n  comment,\n  userName,\n  editingCommentId,\n  setEditingCommentId,\n}) => {\n  //const [editingCommentId, setEditingCommentId] = useState(null); //상위 컴포넌트로 이동\n  const [updateComment, setUpdateComment] = useState('');\n  const day = new Date(comment.updatedAt);\n  const date = day.toLocaleDateString();\n\n  const editComment = (e) => {\n    //수정버튼 클릭 시 수정 폼이 보여지는 함수\n    // 수정버튼을 클릭한 댓글의 ID 값을 state 정보로 활용\n\n    setEditingCommentId(e.target.parentNode.parentNode.dataset.id);\n    setUpdateComment(e.target.parentNode.querySelector('p').textContent); //기존 작성 댓글 나타나도록\n  };\n  const deleteComment = () => {\n    const response = fetch(`${url}/deleteComment/${comment._id}`, {})\n  };\n  const editCommentUpdate = () => {};\n  const cancelCommentUpdate = () => {\n    setEditingCommentId(null);\n  };\n\n  return (\n    <li data-id={comment._id}>\n      {/* 삼항연산자 활용 */}\n      {editingCommentId === comment._id ? (\n        <div className={style.editCon}>\n          <textarea\n            name=\"content\"\n            id={comment._id}\n            value={updateComment}\n            onChange={(e) => {\n              setUpdateComment(e.target.value);\n            }}\n          />\n          <button onClick={editCommentUpdate}>수정완료</button>\n          <button onClick={cancelCommentUpdate}>취소</button>\n        </div>\n      ) : (\n        <div className={style.list}>\n          <p className={style.content}>{comment.content}</p>\n          <p className={style.author}>{comment.author}</p>\n          <p className={style.date}>{date}</p>\n\n          {userName === comment.author ? (\n            <>\n              <button onClick={editComment}>수정</button>\n              <button onClick={deleteComment}>삭제</button>\n            </>\n          ) : (\n            <>\n              <button disabled>수정</button>\n              <button disabled>삭제</button>\n            </>\n          )}\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default CommentsLi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}